diff --git a/examples/classification/example.py b/examples/classification/example.py
index 808426cf..c81aac05 100755
--- a/examples/classification/example.py
+++ b/examples/classification/example.py
@@ -203,24 +203,21 @@ def classify(caffemodel, deploy_file, image_files,
 
     ### Process the results
 
-    indices = (-scores).argsort()[:, :5] # take top 5 results
-    classifications = []
-    for image_index, index_list in enumerate(indices):
-        result = []
-        for i in index_list:
-            # 'i' is a category in labels and also an index into scores
-            if labels is None:
-                label = 'Class #%s' % i
-            else:
-                label = labels[i]
-            result.append((label, round(100.0*scores[image_index, i],4)))
-        classifications.append(result)
-
-    for index, classification in enumerate(classifications):
-        print '{:-^80}'.format(' Prediction for %s ' % image_files[index])
-        for label, confidence in classification:
-            print '{:9.4%} - "{}"'.format(confidence/100.0, label)
-        print
+    # Format of scores is [ batch_size x max_bbox_per_image x 5 (xl, yt, xr, yb, confidence) ]
+    # https://github.com/NVIDIA/caffe/blob/v0.15.13/python/caffe/layers/detectnet/clustering.py#L81
+    for i, image_results in enumerate(scores):
+        print '==> Image #%d' % i
+        for left, top, right, bottom, confidence in image_results:
+            if confidence == 0:
+                continue
+
+            print 'Detected object at [(%d, %d), (%d, %d)] with "confidence" %f' % (
+                int(round(left)),
+                int(round(top)),
+                int(round(right)),
+                int(round(bottom)),
+                confidence,
+            )
 
 
 if __name__ == '__main__':